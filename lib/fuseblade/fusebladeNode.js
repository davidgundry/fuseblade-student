var e,t;e=global,t=function(){return function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);class a{}class r extends a{}class s extends a{}class i{constructor(e,t,n){this.commandType=e,this.clientID=t,this.teamID=n}}class o{constructor(e,t){this._isObserver=!1,this.clientID=e,this.teamID=t}get isObserver(){return this._isObserver}set isObserver(e){this._isObserver=e}}class l extends o{constructor(e,t,n){super(e,t),this._ai=n}createScenario(e,t){this._data=e,this._ai.create(this.clientID,this.teamID,t)}sendDataUpdate(e){this._data=e}grabCommands(e){return e.setClient(this.clientID),e.setTeam(this.teamID),this._ai.update(this._data,e)}}class h{loadScenario(e){this.scenario=e,this.scenario.ready&&this.scenario.create()}}class c extends h{constructor(){super(...arguments),this._ticks=0,this._maxTicks=1e3,this._delta=1/60}run(){if(!this.scenario.ready)throw new Error("Cannot run server as scenario is not ready");for(this.scenario.created||this.scenario.create(),console.log("Running scenario:"),console.log("for",this._maxTicks,"updates"),console.log("with a",this._delta,"s timestep");!this.scenario.ended&&this._ticks<this._maxTicks;)this.scenario.update(this._delta),this._ticks++;return console.log("Simulation completed after",this._ticks,"updates (",this._maxTicks*this._delta,"seconds simulated)"),console.log("Game over state was "+(this.scenario.ended?"":"not ")+"found"),!0}}class d{constructor(e,t,n){this._created=!1,this._gameModel=e,this._data=t,this._clients=n}get ended(){return this._ended}get ready(){return 0===this._clients.remainingSlots}get created(){return this._created}get clients(){return this._clients}get gameModel(){return this._gameModel}get data(){return this._data}create(){this.clients.createScenario(this._data,this._gameModel),this._created=!0}load(e){this._data.load(e)}getSaveData(){return this._data.save()}addClient(e){return this._clients.addClient(e)}addAITeam(e){this._clients.addClient(new l(this._clients.nextClient,this._clients.nextTeam,e))}runHeadless(){let e=new c;return e.loadScenario(this),!!e.run()}}class g extends d{update(){this.ended||(this.gameModel.applyCommands(this.data,this.clients.getCommandsOfClient(this.data.getCurrentPlayer())),this.gameModel.goalTest(this.data)&&(this._ended=!0),this.data.moveToNextPlayer(),this.clients.sendDataUpdate(this.data))}}class m extends d{update(e){if(!this.ended){let t=this.clients.getCommands();this.gameModel.applyCommands(this.data,t,e),this.gameModel.goalTest(this.data)&&(this._ended=!0),this.clients.sendDataUpdate(this.data)}}}class u{constructor(e,t){this._clients=[],this._clientsCount=0,this._clients=new Array(e),this.commandFactory=t}get clientsCount(){return this._clientsCount}get maxClients(){return this._clients.length}get remainingSlots(){return this._clients.length-this._clientsCount}get nextClient(){let e=0;for(let t=0;t<this._clients.length;t++)this._clients[t]&&this._clients[t].clientID===e&&e++;return e}get nextTeam(){let e=0;for(let t=0;t<this._clients.length;t++)this._clients[t]&&this._clients[t].teamID===e&&e++;return e}addClient(e){for(let t=0;t<this._clientsCount;t++)if(this._clients[t].clientID===e.clientID)return!1;return this._clientsCount!==this._clients.length&&(this._clients[this._clientsCount]=e,this._clientsCount++,!0)}setObserver(e,t){this._clients[e].isObserver=t}createScenario(e,t){for(let n=0,a=this._clientsCount;n<a;n++)this._clients[n].createScenario(e,t)}sendDataUpdate(e,t){for(let t=0,n=this._clientsCount;t<n;t++)this._clients[t].sendDataUpdate(e)}getCommands(){let e=[];for(let t=0,n=this._clientsCount;t<n;t++)this._clients[t].isObserver||(e=e.concat(this._clients[t].grabCommands(this.commandFactory)));return e}getCommandsOfClient(e){if(!this._clients[e].isObserver)return this._clients[e].grabCommands(this.commandFactory)}}var f,p,y,_;!function(e){e[e.Wolf=0]="Wolf",e[e.Sheep=1]="Sheep",e[e.Cabbage=2]="Cabbage"}(f||(f={})),function(e){e[e.MoveWolf=0]="MoveWolf",e[e.MoveCabbage=1]="MoveCabbage",e[e.MoveSheep=2]="MoveSheep",e[e.MoveFarmer=3]="MoveFarmer"}(p||(p={}));class v{load(e){this.leftBank=e.leftBank.slice(),this.rightBank=e.rightBank.slice(),this.farmerOnLeftBank=e.farmerOnLeftBank}cloneFrom(e){this.leftBank=e.leftBank.slice(),this.rightBank=e.rightBank.slice(),this.farmerOnLeftBank=e.farmerOnLeftBank}clients(){return 1}save(){return{leftBank:this.leftBank,rightBank:this.rightBank,farmerOnLeftBank:this.farmerOnLeftBank}}equals(e){if(this.leftBank.length!==e.leftBank.length)return!1;if(this.farmerOnLeftBank!==e.farmerOnLeftBank)return!1;for(let t=0,n=this.leftBank.length;t<n;t++){let n=!1;for(let a=0,r=e.leftBank.length;a<r;a++)if(this.leftBank[t]===e.leftBank[a]){n=!0;break}if(!n)return!1}return!0}getCurrentPlayer(){return 0}moveToNextPlayer(){}}class M extends r{stateActionMapping(e){if(this._checkIfFailureState(e))return[];let t=e.farmerOnLeftBank?e.leftBank:e.rightBank,n=new Array(t.length+1);n[n.length-1]=p.MoveFarmer;for(let e=0,a=t.length;e<a;e++)t[e]===f.Cabbage?n[e]=p.MoveCabbage:t[e]===f.Sheep?n[e]=p.MoveSheep:t[e]===f.Wolf&&(n[e]=p.MoveWolf);return n}applyCommands(e,t){if(!t)throw new Error("Command submitted was null");if(t instanceof Array)throw new Error("Must submit a single command as an action (not an array)");if(t.commandType===p.MoveFarmer)e.leftBank=e.leftBank,e.rightBank=e.rightBank,e.farmerOnLeftBank=!e.farmerOnLeftBank;else{let n;t.commandType===p.MoveCabbage?n=f.Cabbage:t.commandType===p.MoveSheep?n=f.Sheep:t.commandType===p.MoveWolf&&(n=f.Wolf);let a=[],r=[];for(let t=0,r=e.leftBank.length;t<r;t++)e.leftBank[t]!==n&&a.push(e.leftBank[t]);for(let t=0,a=e.rightBank.length;t<a;t++)e.rightBank[t]!==n&&r.push(e.rightBank[t]);e.farmerOnLeftBank?r.push(n):a.push(n),e.leftBank=a,e.rightBank=r,e.farmerOnLeftBank=!e.farmerOnLeftBank}}goalTest(e){return!!this._checkIfFailureState(e)||0===e.leftBank.length}heuristic(e){return 1e3*e.leftBank.length}_checkIfFailureState(e){if(e.farmerOnLeftBank){if(-1!==e.rightBank.indexOf(f.Wolf)&&-1!==e.rightBank.indexOf(f.Sheep)||-1!==e.rightBank.indexOf(f.Cabbage)&&-1!==e.rightBank.indexOf(f.Sheep))return!0}else if(-1!==e.leftBank.indexOf(f.Wolf)&&-1!==e.leftBank.indexOf(f.Sheep)||-1!==e.leftBank.indexOf(f.Cabbage)&&-1!==e.leftBank.indexOf(f.Sheep))return!0;return!1}}class A{setClient(e){}setTeam(e){}getCommandList(){return[p.MoveCabbage,p.MoveFarmer,p.MoveWolf,p.MoveSheep]}getCommand(e){return new i(e,0,0)}}class C extends g{constructor(){let e=new v;e.load({leftBank:[f.Sheep,f.Wolf,f.Cabbage],rightBank:[],farmerOnLeftBank:!0}),super(new M,e,new u(1,new A))}}!function(e){e[e.None=0]="None",e[e.Low=1]="Low",e[e.High=2]="High"}(y||(y={}));class k{cloneFrom(e){}clients(){return this.teams.length}load(e){if(this.teams=e.teams,this.teams.forEach((e,t)=>{if(e.isPlaying&&0===e.currentAgents)throw new Error("Save Data Error: A team with 0 agents must have an isPlaying value of false");if(e.killCount.length!==this.teams.length)throw new Error("Save Data Error: Incorrect length of kill count array ("+e.killCount.length+") for team "+t+" it should be length "+this.teams.length)}),this.agents=e.agents,this.teams.length!=this.agents.length)throw new Error("Save Data Error: Mismatch between number of teams ("+this.teams.length+") and number of arrays of agents ("+this.agents.length+"). The must be one array of agents per team.");this.agentsLength=e.agents.map(e=>e.length),this.teams.forEach((e,t)=>{if(e.currentAgents!==this.agentsLength[t])throw new Error("Save Data Error: Mismatch between current agents in team and number of agents listed for team with index"+t)}),this.map=new Array(e.map.length),this.influence=new Array(e.map.length);for(let t=0,n=this.map.length;t<n;t++){this.map[t]=new Array(e.map[t].length),this.influence[t]=new Array(e.map[t].length);for(let n=0,a=this.map.length;n<a;n++)if(this.influence[t][n]=new Array(e.teams.length),this.map[t][n]=e.map[t][n],e.influence)for(let a=0,r=this.influence[t][n].length;a<r;a++)this.influence[t][n][a]=e.influence[t][n][a];else for(let e=0,a=this.influence[t][n].length;e<a;e++)this.influence[t][n][e]=0}}save(){let e=new Array(this.teams.length);for(let t=0,n=this.teams.length;t<n;t++)e[t]=this.teams[t];let t=new Array(this.map.length),n=new Array(this.influence.length);for(let e=0,a=this.map.length;e<a;e++){t[e]=new Array(this.map[e].length),n[e]=new Array(this.map[e].length);for(let a=0,r=this.map.length;a<r;a++){n[e][a]=new Array(this.teams.length),t[e][a]=this.map[e][a];for(let t=0,r=this.influence[e][a].length;t<r;t++)n[e][a][t]=this.influence[e][a][t]}}let a=new Array(this.teams.length);for(let e=0;e<this.agents.length;e++){a[e]=new Array(this.agents[e].length);for(let t=0;t<this.agents[e].length;t++)a[e][t]=this.agents[e][t]}return{teams:e,map:t,influence:n,agents:a}}}!function(e){e[e.AgentMoveForward=0]="AgentMoveForward",e[e.AgentMoveBackward=1]="AgentMoveBackward",e[e.AgentStrafeLeft=2]="AgentStrafeLeft",e[e.AgentStrafeRight=3]="AgentStrafeRight",e[e.AgentStopMoving=4]="AgentStopMoving",e[e.AgentTurnLeft=5]="AgentTurnLeft",e[e.AgentTurnRight=6]="AgentTurnRight",e[e.AgentStopTurning=7]="AgentStopTurning",e[e.AgentBurstFireOn=8]="AgentBurstFireOn",e[e.AgentBurstFireOff=9]="AgentBurstFireOff",e[e.AgentShoot=10]="AgentShoot",e[e.AgentMelee=11]="AgentMelee",e[e.AgentReload=12]="AgentReload",e[e.AgentShieldUp=13]="AgentShieldUp",e[e.AgentShieldDown=14]="AgentShieldDown"}(_||(_={}));class b extends s{constructor(){super(),this._allActions=[];for(let e in _)isNaN(Number(e))||this._allActions.push(parseInt(e))}stateActionMapping(e){return this._allActions}applyCommands(e,t,n){for(let a=0,r=t.length;a<r;a++)if(t[a]){e.teams[t[a].teamID].movesMade++;let r=e.agents[t[a].teamID][t[a].agentID];if(!r)throw new Error("Command returned for agent that does not exist. Team "+t[a].teamID+", agent: "+t[a].agentID);this._agentActions(t[a],t[a].teamID,t[a].agentID,n,r)}this._doStateUpdate(e,n)}_agentActions(e,t,n,a,r){e.commandType===_.AgentMoveForward?(r.velocityY=Math.max(r.velocityY-r.speed*Math.sin(r.rotation),r.speed),r.velocityX=Math.max(r.velocityX+r.speed*Math.cos(r.rotation),r.speed)):e.commandType===_.AgentMoveBackward?(r.velocityY=Math.max(r.velocityY+r.speed*Math.sin(r.rotation),r.speed),r.velocityX=Math.max(r.velocityX-r.speed*Math.cos(r.rotation),r.speed)):e.commandType===_.AgentStrafeLeft?(r.velocityY=Math.max(r.velocityY-r.speed*Math.cos(r.rotation),r.speed),r.velocityX=Math.max(r.velocityX-r.speed*Math.sin(r.rotation),r.speed)):e.commandType===_.AgentStrafeRight?(r.velocityY=Math.max(r.velocityY+r.speed*Math.cos(r.rotation),r.speed),r.velocityX=Math.max(r.velocityX+r.speed*Math.sin(r.rotation),r.speed)):e.commandType===_.AgentStopMoving?(r.velocityX=0,r.velocityY=0):e.commandType===_.AgentTurnRight?r.rotVelocity=r.rotSpeed:e.commandType===_.AgentTurnLeft?r.rotVelocity=-r.rotSpeed:e.commandType===_.AgentStopTurning?r.rotVelocity=0:e.commandType===_.AgentBurstFireOn?r.burstFirePossible&&0===r.reloadWait&&!r.shieldUp&&(r.burstFireOn=!0):e.commandType===_.AgentBurstFireOff?r.burstFireOn=!1:e.commandType===_.AgentShoot?r.ammoCurrent>0&&0===r.reloadWait&&!r.shieldUp&&r.ammoCurrent--:e.commandType===_.AgentMelee||(e.commandType===_.AgentReload?(r.ammoCurrent=r.ammoClipSize,r.reloadWait=r.reloadTime):e.commandType===_.AgentShieldDown?r.shieldUp=!1:e.commandType===_.AgentShieldUp&&(r.shieldUp=!0,r.burstFireOn=!1))}_doStateUpdate(e,t){for(let n=0,a=e.agents.length;n<a;n++)for(let a=0,r=e.agents[n].length;a<r;a++)this._updateAgent(n,a,t,e.agents[n][a],e),this._updateInfluence(e,n,a);for(let t=0;t<e.teams.length;t++)0===e.teams[t].currentAgents&&(e.teams[t].isPlaying=!1)}_updateInfluence(e,t,n){let a=Math.floor(e.agents[t][n].x),r=Math.floor(e.agents[t][n].y);e.influence[a][r][t]+=1}_updateAgent(e,t,n,a,r){let s=a.x+a.velocityX*n,i=a.y+a.velocityY*n,o=!1;if(r.map[Math.floor(s)][Math.floor(i)]!==y.None&&(o=!0),o||(a.x=s,a.y=i,a.x=Math.max(Math.min(a.x,r.map.length-.001),0),a.y=Math.max(Math.min(a.y,r.map[0].length-.001),0)),a.rotation+=a.rotVelocity*n,a.rotation=a.rotation%(2*Math.PI),a.rotation<0&&(a.rotation=2*Math.PI+a.rotation),a.burstFireOn){let e=Math.round(a.ammoCurrent-a.rateOfFire*n);a.ammoCurrent=Math.max(e,0),0===a.ammoCurrent&&(a.burstFireOn=!1)}a.reloadWait>0&&(a.reloadWait=Math.max(a.reloadWait-n,0))}goalTest(e){let t=0;for(let n=0;n<e.agentsLength.length;n++)0!==e.agentsLength[n]&&t++;return t<=1}}class S extends i{constructor(e,t,n,a){super(e,t,n),this.agentID=a}}class B{constructor(){this._allActions=[];for(let e in _)isNaN(Number(e))||this._allActions.push[e]}setClient(e){this._currentClient=e}setTeam(e){this._currentTeam=e}getCommand(e,t){return new S(e,this._currentClient,this._currentTeam,t||0)}getCommandList(){return this._allActions}}class w extends m{constructor(e){let t=new k;t.load(e);let n=new u(t.clients(),new B);super(new b,t,n)}create(){super.create(),console.log("Created Fuseblade scenario with:"),console.log("a map of",this.data.map.length,"by",this.data.map[0].length),console.log(this.data.clients(),"clients"),console.log(this.data.teams.length,"teams"),console.log(this.data.agentsLength.reduce((e,t,n)=>e+t),"agents, assigned as follows:",...this.data.agentsLength)}update(e){for(let e=0;e<this.data.teams.length;e++)this.data.teams[e].isPlaying||this.clients.setObserver(e,!0);super.update(e)}}class x extends h{run(){return!!this.scenario.ready&&(this.scenario.created||this.scenario.create(),!0)}update(e){this.scenario.update(e)}connectLocalClient(e){return this.scenario.addClient(e)}}class O{}class T{create(e,t,n){this._gameModel=n}update(e,t){let n=this._gameModel.stateActionMapping(e);if(n.length>0){let e=Math.round(Math.random()*n.length-1);return t.getCommand(n[e])}return null}scenarioEnded(e){}}n.d(t,"Command",(function(){return i})),n.d(t,"GameModel",(function(){return a})),n.d(t,"LocalPlayServer",(function(){return x})),n.d(t,"NodeServer",(function(){return c})),n.d(t,"Scenario",(function(){return d})),n.d(t,"AIClientConnection",(function(){return l})),n.d(t,"ClientConnection",(function(){return o})),n.d(t,"ClientController",(function(){return u})),n.d(t,"LocalServerConnection",(function(){return O})),n.d(t,"RandomAIClient",(function(){return T})),n.d(t,"FPScenario",(function(){return C})),n.d(t,"FBScenario",(function(){return w})),t.default=class{createFusebladeScenario(e){return new w(e)}createFarmerPuzzleScenario(){return new C}}}])},"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("GamesAIScenarioFactory",[],t):"object"==typeof exports?exports.GamesAIScenarioFactory=t():e.GamesAIScenarioFactory=t();